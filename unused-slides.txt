======================================
Slides removed due to time constraints
======================================

To get it down to 40 minutes
============================

----

1997: XML
---------

.. note:: 1997 XML *Semantic*.

  Extensible Markup Language

  wikipedia: "XML is an application profile of SGML"

  No example because there is no "default" XML - a schema is needed.

  A simpler subset of SGML, which makes parsers easier to write. Other SGML
  based tools (TEI, Docbook, HTML itself) have generally moved towards using
  XML rather than SGML in their specification.

  XML was compiled by a working group of eleven members,[30] supported by a
  (roughly) 150-member Interest Group.

  **If this is kept** it needs to be a very brief slide. On the other hand,
  I think it is useful as a marker, given how XML is important to the SGML
  world.

----

2009: Docbook 5
---------------

::

   <?xml version="1.0" encoding="UTF-8"?>
   <book xml:id="simple_book" xmlns="http://docbook.org/ns/docbook" version="5.0">
     <title>Very simple book</title>
     <chapter xml:id="chapter_1">
       <title>Chapter 1</title>
       <para>Hello world!</para>
       <para>I hope that your day is proceeding <emphasis>splendidly</emphasis>!</para>
     </chapter>
     <chapter xml:id="chapter_2">
       <title>Chapter 2</title>
       <para>Hello again, world!</para>
     </chapter>
   </book>

.. note:: **skippable** Docbook 5

   Example from wikipedia (for Docbook 5, which is relatively recent).

   DocBook 5 is an XML language, formally defined by a RELAX NG schema with
   integrated Schematron rules.
 
----

1994: POD
---------

::

  =pod

  =head1 DESCRIPTION

  This is not I<really> representative of POD usage.

  =over 2

  =item This is a list item.

  =item This is another list item.

  =back

  =cut

.. note:: 1994 POD *Presentational*. Still in use today.

  Perl's "Plain Old Documentation".

  Same year as wikiwikiweb

  An example of markup to a specific purpose, and clearly very successful.

  Note that the blank lines are required around the POD commands.

  I don't think you can do multi-paragraph list items. The POD definitions
  contains ambuguities, although how to handle some of them is explained in
  the POD documentation.

----

1995: Javadoc
-------------

::

  /**
   * Short one line description.
   * <p>
   * Longer description. If there were any, it would be here.
   * <p>
   * And even more explanations to follow in consecutive
   * paragraphs separated by HTML paragraph breaks.
   *
   * @param  variable Description text text text.
   * @return Description text text text.
   */
  public int methodName (...) {
      // ...
  }

.. note::  **skippable** javadoc

  1995 javadoc *Presentational*. Still in use today.

  Has never specified the subset of HTML it allows.

----
 
To get it down to (maybe) 25 minutes
====================================

If 26 slides took 40 minutes, then that's about 1-and-a-half minutes per
slide, and 25 minutes suggests 16 slides. Which is going to be interesting to
do, as it means dropping 10 slides. And not talking longer per slide to make
up for it(!).

Scaling back to 40 minutes
~~~~~~~~~~~~~~~~~~~~~~~~~~
26 slides was pushing it (in fact, 16-18 slides was pushing it for 30
minutes). It's probably better to aim for 20-ish slides at most, and leave
myself a bit more freedom of time.

----

SGML: document declares its DOCTYPE
-----------------------------------

::

  <!DOCTYPE html>
  <html>
    <head>
      <title>This is a title</title>
    </head>
    <body>
      <p>Hello world!</p>
    </body>
  </html>

.. note:: **skippable** Using a DTD

  DOCTYPE = Documentation Type Declaration

  A document can use a DOCTYPE to say what DTD it is conforming to.

----

1991: setext
------------

::

  Why setext?
  -----------

    I agree that FAQ's would best be written in something like setext_.
    Why?  Because this document is written in setext and it includes
    the ability to embed HTML hypertext links without being obnoxious.

    As you can see it's easy to write setext documents, and as Edward
    pointed out, it uses existing text conventions for **bold** and _italic_
    words and titles.

  .. _setext http://www.bsdi.com/setext/
  ..

.. note:: 1991 setext *Presentational*. Lightweight.

  Ian Feldman, for use in writing the TidBITs electronic newsletter.

  Excerpted from a document called "Why setext".

  Partly a reaction to SGML. Clearly influential on
  all of the succeeding lightweight markups.

  Same year as HTML

----

----

.. vim: set filetype=rst tabstop=8 softtabstop=2 shiftwidth=2 expandtab:
